---
kind: ConfigMap
metadata:
  name: idm-conf-repo
apiVersion: v1
data:
  repo.init.json: |
    {
      "insert" : {
        "internal/role" : [
          {
            "id" : "openidm-admin",
            "name" : "openidm-admin",
            "description" : "Administrative access"
          },
          {
            "id" : "openidm-authorized",
            "name" : "openidm-authorized",
            "description" : "Basic minimum user"
          },
          {
            "id" : "openidm-reg",
            "name" : "openidm-reg",
            "description" : "Anonymous access"
          },
          {
            "id" : "openidm-cert",
            "name" : "openidm-cert",
            "description" : "Authenticated via certificate"
          },
          {
            "id" : "openidm-tasks-manager",
            "name" : "openidm-tasks-manager",
            "description" : "Allowed to reassign workflow tasks"
          },
          {
            "id" : "platform-provisioning",
            "name" : "platform-provisioning",
            "description" : "Platform provisioning access"
          },
          {
            "id": "governance-administrator",
            "name": "governance-administrator",
            "description": "Manage governance operations"
          },
          {
            "id": "access-request-admin",
            "name": "access-request-admin",
            "description": "Administrative access to Access Request application"
          },
          {
            "id": "glossary-admin",
            "name": "glossary-admin",
            "description": "Administrative access to the glossary"
          },
          {
            "id": "certification-admin",
            "name": "certification-admin",
            "description": "Administrative access to manage IGA certifications"
          },
          {
            "id": "application-admin",
            "name": "application-admin",
            "description": "Administrative access to manage IGA applications"
          },
          {
            "id": "entitlement-admin",
            "name": "entitlement-admin",
            "description": "Administrative access to manage IGA entitlements"
          }
        ],
        "internal/user" : [
          {
            "id" : "openidm-admin",
            "password" : "&{openidm.admin.password}"
          },
          { 
            "id": "iga-internal-admin",
            "password": "iga-internal-admin"
          },
          {
            "id" : "anonymous",
            "password" : "anonymous"
          },
          {
            "id" : "idm-provisioning"
          }
        ]
      }
    }

---
kind: ConfigMap
metadata:
  name: idm-conf-authentication
apiVersion: v1
data:
  authentication.json: |
    {
      "serverAuthContext" : {
        "sessionModule" : {
          "name" : "JWT_SESSION",
          "properties" : {
            "maxTokenLifeMinutes" : 120,
            "tokenIdleTimeMinutes" : 30,
            "sessionOnly" : true,
            "isHttpOnly" : true,
            "enableDynamicRoles" : false
          }
        },
        "authModules" : [
          {
            "name" : "STATIC_USER",
            "properties" : {
              "queryOnResource" : "internal/user",
              "username" : "anonymous",
              "password" : "anonymous",
              "defaultUserRoles" : [
                "internal/role/openidm-reg"
              ]
            },
            "enabled" : true
          },
          {
            "name" : "STATIC_USER",
            "properties" : {
              "queryOnResource" : "internal/user",
              "username" : "openidm-admin",
              "password" : "&{openidm.admin.password}",
              "defaultUserRoles" : [
                "internal/role/openidm-authorized",
                "internal/role/openidm-admin"
              ]
            },
            "enabled" : true
          },
          {
            "name" : "STATIC_USER",
            "properties" : {
            "queryOnResource" : "internal/user",
            "username" : "iga-internal-admin",
            "password" : "iga-internal-admin",
            "defaultUserRoles" : [
              "internal/role/openidm-authorized",
                "internal/role/openidm-admin"
              ]
            },
            "enabled" : true
          },
          {
            "name" : "MANAGED_USER",
            "properties" : {
              "augmentSecurityContext": {
                  "type" : "text/javascript",
                  "source" : "var augmentYield = require('auth/customAuthz').setProtectedAttributes(security);require('auth/orgPrivileges').assignPrivilegesToUser(resource, security, properties, subjectMapping, privileges, 'privileges', 'privilegeAssignments', augmentYield);"
              },
              "queryId" : "credential-query",
              "queryOnResource" : "managed/user",
              "propertyMapping" : {
                "authenticationId" : "username",
                "userCredential" : "password",
                "userRoles" : "authzRoles",
                "additionalUserFields": ["adminOfOrg", "ownerOfOrg"]
              },
              "defaultUserRoles" : [
                "internal/role/openidm-authorized"
              ]
            },
            "enabled" : true
          },
          {
            "name" : "SOCIAL_PROVIDERS",
            "properties" : {
              "defaultUserRoles" : [
                "internal/role/openidm-authorized"
              ],
              "augmentSecurityContext" : {
                "type" : "text/javascript",
                "globals" : { },
                "file" : "auth/populateAsManagedUserFromRelationship.js"
              },
              "propertyMapping" : {
                "userRoles" : "authzRoles"
              }
            },
            "enabled" : true
          }
        ]
      }
    }

---
kind: ConfigMap
metadata:
  name: idm-conf-audit
apiVersion: v1
data:
  audit.json: ""

---
kind: ConfigMap
metadata:
  name: idm-conf-metrics
apiVersion: v1
data:
  metrics.json: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: openidm-secrets-json
data:
  secrets.json: ""

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: idm-authentication
data:
  authentication.json: ""