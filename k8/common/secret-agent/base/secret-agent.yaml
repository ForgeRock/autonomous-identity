---
apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: secret-agent-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.6.1
  creationTimestamp: null
  name: secretagentconfigurations.secret-agent.secrets.forgerock.io
spec:
  group: secret-agent.secrets.forgerock.io
  names:
    kind: SecretAgentConfiguration
    listKind: SecretAgentConfigurationList
    plural: secretagentconfigurations
    shortNames:
    - sac
    singular: secretagentconfiguration
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - description: SAC State
      jsonPath: .status.state
      name: Status
      type: string
    - description: Total no. of secrets managed by the sac
      jsonPath: .status.totalManagedSecrets
      name: NumSecrets
      type: integer
    - description: Total no. of k8s secrets created
      jsonPath: .status.totalKubeSecrets
      name: NumK8sSecrets
      type: integer
    - description: Total no. of SM secrets created
      jsonPath: .status.totalSecretManagerSecrets
      name: NumSMSecrets
      priority: 1
      type: integer
    - description: All K8s managed secrets
      jsonPath: .status.managedKubeSecrets
      name: K8sSecrets
      priority: 1
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: SecretAgentConfiguration is the Schema for the secretagentconfigurations API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SecretAgentConfigurationSpec defines the desired state of SecretAgentConfiguration
            properties:
              appConfig:
                description: AppConfig is the configuration for the forgeops-secrets application
                properties:
                  awsRegion:
                    type: string
                  azureVaultName:
                    type: string
                  backOffSecs:
                    default: 2
                    description: Optional backoff time in seconds before retrying secret generation. Defaults to 2
                    type: integer
                  createKubernetesObjects:
                    type: boolean
                  credentialsSecretName:
                    type: string
                  gcpProjectID:
                    type: string
                  maxRetries:
                    default: 3
                    description: Optional number of times the operator will attempt to generate secrets. Defaults to 3
                    type: integer
                  secretTimeout:
                    default: 40
                    description: Optional timeout value to generate a individual secret. Defaults to 40
                    type: integer
                  secretsManager:
                    description: SecretsManager Specifies which cloud secret manager will be used
                    enum:
                    - none
                    - GCP
                    - AWS
                    - Azure
                    type: string
                  secretsManagerPrefix:
                    type: string
                required:
                - createKubernetesObjects
                - secretsManager
                type: object
              secrets:
                items:
                  description: SecretConfig is the configuration for a specific Kubernetes secret
                  properties:
                    keys:
                      items:
                        description: KeyConfig is the configuration for a specific data key
                        properties:
                          name:
                            type: string
                          spec:
                            description: KeySpec is the configuration for each key
                            properties:
                              algorithm:
                                description: AlgorithmType Specifies which keystore algorithm to use
                                enum:
                                - ECDSAWithSHA256
                                - SHA256WithRSA
                                type: string
                              distinguishedName:
                                description: DistinguishedName certificate subject data
                                properties:
                                  commonName:
                                    type: string
                                  country:
                                    items:
                                      type: string
                                    type: array
                                  locality:
                                    items:
                                      type: string
                                    type: array
                                  organization:
                                    items:
                                      type: string
                                    type: array
                                  organizationUnit:
                                    items:
                                      type: string
                                    type: array
                                  postalCode:
                                    items:
                                      type: string
                                    type: array
                                  province:
                                    items:
                                      type: string
                                    type: array
                                  serialNumber:
                                    type: string
                                  streetAddress:
                                    items:
                                      type: string
                                    type: array
                                type: object
                              duration:
                                type: string
                              isBase64:
                                type: boolean
                              keyPassPath:
                                type: string
                              keytoolAliases:
                                items:
                                  description: KeytoolAliasConfig is the configuration for a keystore alias
                                  properties:
                                    args:
                                      items:
                                        type: string
                                      type: array
                                    cmd:
                                      description: KeytoolCmd Specifies the keytool command to use.
                                      enum:
                                      - genkeypair
                                      - genseckey
                                      - importcert
                                      - importpassword
                                      - importkeystore
                                      type: string
                                    isKeyPair:
                                      type: boolean
                                    name:
                                      type: string
                                    sourcePath:
                                      type: string
                                  required:
                                  - cmd
                                  - name
                                  type: object
                                minItems: 1
                                type: array
                              length:
                                type: integer
                              pemFormat:
                                type: boolean
                              sans:
                                items:
                                  type: string
                                type: array
                              selfSigned:
                                type: boolean
                              signedWithPath:
                                type: string
                              storePassPath:
                                type: string
                              storeType:
                                description: StoreType Specifies which keystore store type to use
                                enum:
                                - pkcs12
                                - jceks
                                - jks
                                type: string
                              truststoreImportPaths:
                                items:
                                  type: string
                                type: array
                              useBinaryCharacters:
                                type: boolean
                              value:
                                type: string
                            type: object
                          type:
                            description: KeyConfigType Specifies which key type to use
                            enum:
                            - ca
                            - literal
                            - password
                            - ssh
                            - keyPair
                            - truststore
                            - keytool
                            type: string
                        required:
                        - name
                        - type
                        type: object
                      minItems: 1
                      type: array
                    name:
                      type: string
                  required:
                  - keys
                  - name
                  type: object
                minItems: 1
                type: array
            required:
            - appConfig
            - secrets
            type: object
          status:
            description: SecretAgentConfigurationStatus defines the observed state of SecretAgentConfiguration
            properties:
              managedKubeSecrets:
                items:
                  type: string
                type: array
              managedSecretManagerSecrets:
                items:
                  type: string
                type: array
              state:
                description: SecretAgentConfState is used to keep track of the SAC state
                type: string
              totalKubeSecrets:
                type: integer
              totalManagedSecrets:
                type: integer
              totalSecretManagerSecrets:
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: secret-agent-controller-manager
  namespace: secret-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: secret-agent-leader-election-role
  namespace: secret-agent-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: secret-agent-manager-role
rules:
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - secrets/finalizers
  verbs:
  - update
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  - validatingwebhookconfigurations
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - secret-agent.secrets.forgerock.io
  resources:
  - secretagentconfigurations
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - secret-agent.secrets.forgerock.io
  resources:
  - secretagentconfigurations/finalizers
  verbs:
  - update
- apiGroups:
  - secret-agent.secrets.forgerock.io
  resources:
  - secretagentconfigurations/status
  verbs:
  - get
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-agent-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: secret-agent-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: secret-agent-leader-election-rolebinding
  namespace: secret-agent-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: secret-agent-leader-election-role
subjects:
- kind: ServiceAccount
  name: secret-agent-controller-manager
  namespace: secret-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-agent-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-agent-manager-role
subjects:
- kind: ServiceAccount
  name: secret-agent-controller-manager
  namespace: secret-agent-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: secret-agent-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: secret-agent-proxy-role
subjects:
- kind: ServiceAccount
  name: secret-agent-controller-manager
  namespace: secret-agent-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f8e4a0d9.secrets.forgerock.io
kind: ConfigMap
metadata:
  name: secret-agent-manager-config
  namespace: secret-agent-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: secret-agent-controller-manager-metrics-service
  namespace: secret-agent-system
spec:
  ports:
  - name: https
    port: 8443
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: secret-agent-webhook-service
  namespace: secret-agent-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: controller
    app.kubernetes.io/instance: manager
    app.kubernetes.io/name: secret-agent-controller
    app.kubernetes.io/part-of: secret-agent
    control-plane: controller-manager
  name: secret-agent-controller-manager
  namespace: secret-agent-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: secret-agent-manager
        app.kubernetes.io/part-of: secret-agent
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --keytoolPath=/usr/local/openjdk-11/bin/keytool
        - --opensslPath=/usr/bin/openssl
        - --webhook-service-ns=secret-agent-system
        - --webhook-service-name=secret-agent-webhook-service
        - --validating-webhook-name=secret-agent-validating-webhook-configuration
        - --mutating-webhook-name=secret-agent-mutating-webhook-configuration
        - --webhook-secret-name=webhook-server-cert
        - --cloud-secrets-namespace=secret-agent-system
        command:
        - /manager
        image: forgerock/secret-agent:v1.1.3
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        ports:
        - containerPort: 9443
          name: webhook-server
          protocol: TCP
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
      securityContext:
        runAsNonRoot: true
      serviceAccountName: secret-agent-controller-manager
      terminationGracePeriodSeconds: 10
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: secret-agent-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: secret-agent-webhook-service
      namespace: secret-agent-system
      path: /mutate-secret-agent-secrets-forgerock-io-v1alpha1-secretagentconfiguration
  failurePolicy: Fail
  name: msecretagentconfiguration.kb.io
  rules:
  - apiGroups:
    - secret-agent.secrets.forgerock.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secretagentconfigurations
  sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: secret-agent-validating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: secret-agent-webhook-service
      namespace: secret-agent-system
      path: /validate-secret-agent-secrets-forgerock-io-v1alpha1-secretagentconfiguration
  failurePolicy: Fail
  name: vsecretagentconfiguration.kb.io
  rules:
  - apiGroups:
    - secret-agent.secrets.forgerock.io
    apiVersions:
    - v1alpha1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secretagentconfigurations
  sideEffects: None
